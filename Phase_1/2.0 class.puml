@startuml

class Product {
    - productId: long
    - name: string
    - serviceList: List<Service>
    - duration: int
    + getServiceList(): List<Service>

}

class Service {
    - serviceId: long
    - name: string

}


class License {
    - licenseId: long
    - start: date
    - end: date
    - product: Product
    - service: Service
    - vin: String
    - Order: Order
}

class LicenseRepository{

    +getLicensesFromDb(vin): List<License>
    +writeLicenses(List<License>, vin): boolean

}

class ViewLicenseController {
    + getLicense(String vin): List<License>
}

class BuyController {

    + doPurchase(vin, customerId, productId): boolean
    + purchaseConfirmed(OrderId): boolean
    + writeOrder(Order
}
class CancellationController{
+ cancelOrder(OrderId)
}
CancellationController -- CancellationService
class CancellationService{
- Order
+cancelOrder(Order)
}
CancellationService -- Order
class OrderRepository{
+writeOrder(Order)
+getOrder(Id)
}

class Order{
-OrderId: String
-vin:String
-date: String
-Products: List<Product>
    - isCancelled: Boolean


}

class OrderService{
    -Order
    +writeOrder(Order)
    +getOrder((OrderId)
    +buyConfirmed(Order)
}

class LicenseService{

    + createLicense(ProductId, vin)
    + getLicense(String vin)): List<License>

}

class BuyService {

    +createLicenses(List<Product>, vin)
}

LicenseRepository-- License
LicenseRepository -- LicenseService
BuyService -- LicenseService
ViewLicenseController -- LicenseService
BuyController --> OrderService

BuyService -- BuyController
License -- Order

License "0.*" --> "1"Product
Product "0..*" --> "0..*" Service
OrderService --> OrderRepository
Order --> OrderService
@enduml



