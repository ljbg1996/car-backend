@startuml
'https://plantuml.com/sequence-diagram
autonumber
actor Customer as c

participant BuyController as bc
participant ExternalPurchaseSystem as eps
participant OrderService as ps

participant BuyService as bs

participant LicenseService as ls
participant OrderRepository as os

participant LicenseRepository as lr

database Database as db

c-> bc :
activate bc



bc -> ps: writeOrder(Order)
activate ps
ps -> os: writeOrder(Order)
activate os
os -> db:writeOrder(Order)
db --> os:return boolean


os --> ps:return boolean
deactivate os
ps --> bc:return boolean

deactivate ps
bc -> eps: doPurchase(Order)
activate eps
eps --> bc: request received
deactivate eps
deactivate bc

eps -> ps: paymentCompleted(OrderId)
activate eps
activate ps
ps --> eps: request received
deactivate eps

ps -> os:getOrder(OrderId)
activate os
os->db:getOrder(OrderId)
db --> os:return Order
os --> ps:return Order
deactivate os




ps-> bs: buyConfirmed(Order)

deactivate ps
activate bs



loop for(Product p : List<Product>)

    bs-> ls: manageLicenses(ProductID)
    activate ls
            ls->lr: checkActiveLicenses((ProductID)
            activate lr
            lr->ls: return List<License>
            deactivate lr
    loop for(Service s : List<Service>)
        alt Active Licenses for all Services exist

        ls->ls: appendLicenses()
        else No active Licenses for all Services
        ls -> ls : new License()
        end
        ls -> lr: writeLicense(List<License>, vin)
        activate lr
        lr -> db:writeLicense(List<License>, vin)
        db -> lr: return boolean
        lr --> ls: return boolean
        deactivate lr
        ls-->bs: return boolean
        deactivate ls

    end
bs --> bc: return boolean
deactivate bs
activate bc
bc --> c: return boolean
deactivate bc




@enduml