@startuml

'''''' Order
class OrderRESTController{
    buy(articleNumber, vin, customerId, duration):orderId
}
class OrderService {
    buy(articleNumber, vin, customerId, duration):orderId
}
class CustomerRepository {
    getCustomer(customerId))
}

class OrderRepository{
    insertOrder(order):id
    setOrderAsPayed(orderId):id
    getOrder(orderId)):Order
}
class ExternalPaymentServiceRestController <<external>> {
    processPayment(orderId, paymentInfo, amount)
}

OrderService --> ExternalPaymentServiceRestController : <<API call>>
OrderService -- CustomerRepository : uses
OrderRESTController -- OrderService : uses
OrderService -- OrderRepository: uses

'''''' FinaliseOrder
class ExternalPaymentService <<external>>
class FinaliseOrderRESTController{
    approvePayementOfOrder(orderId)
}
class FinaliseOrderService {
    approvePayementOfOrderAndAssignUsageRights(orderId)
    -createUsageRights(order)
}
ExternalPaymentService--> FinaliseOrderRESTController: <<API call>>
FinaliseOrderRESTController -- FinaliseOrderService : uses
FinaliseOrderService -- OrderRepository: uses
FinaliseOrderService -- CustomerRepository: uses

'''''' ActiveServices
class ActiveServiceRESTController{
    getActiveServices(vin, customerId):List<Service>
}
class ActiveServiceService{
    getActiveServices(vin, customerId):List<Service>
}
ActiveServiceService -- CustomerRepository: uses
ActiveServiceRESTController -- ActiveServiceService : uses

@enduml
