@startuml

class UsageRight {
  startDate: Date
  endDate: Date
  fromProductWithArticleNumber: ArticleNumber
  coveredVehicle:Vin
  coveredCustomer:CustomerId

}

@enduml

@startuml

actor ExternalPaymentService

ExternalPaymentService -> FinaliseOrderRESTController : approvePaymentOfOrder(orderId)
activate FinaliseOrderRESTController

FinaliseOrderRESTController -> FinaliseOrderService : approvePaymentOfOrderAndAssignUsageRights(orderId)
activate FinaliseOrderService

FinaliseOrderService -> OrderStore : markAsPayed(orderId)
activate OrderStore
OrderStore --> FinaliseOrderService : true
deactivate OrderStore
FinaliseOrderService --> FinaliseOrderRESTController : success
FinaliseOrderRESTController --> ExternalPaymentService : success
    deactivate FinaliseOrderRESTController

FinaliseOrderService -> OrderStore : getOrder(orderId)
activate OrderStore
OrderStore --> FinaliseOrderService : order
deactivate OrderStore

alt order.canceled
    FinaliseOrderService --> FinaliseOrderRESTController : return
else
    FinaliseOrderService -> VehicleStore : getActiveServices(order.vehicle.id, order.customer.id)
    activate VehicleStore
    VehicleStore --> FinaliseOrderService : serviceList
    deactivate VehicleStore

    loop foreach productConfig in order.productConfigs

        FinaliseOrderService -> FinaliseOrderService : determineStartDate(pc.product.services, serviceList)
        activate FinaliseOrderService
        FinaliseOrderService --> FinaliseOrderService : startDate
        deactivate FinaliseOrderService

        FinaliseOrderService -> FinaliseOrderService : createUsageRights(startDate,pc.duration,pc.product.services)
        activate FinaliseOrderService
        FinaliseOrderService --> FinaliseOrderService : usageRights
        deactivate FinaliseOrderService

    end
        FinaliseOrderService -> OrderStore : persistUsageRights(usageRights)
        activate OrderStore
        OrderStore --> FinaliseOrderService : success
        deactivate OrderStore
end

deactivate FinaliseOrderService

@enduml
