@startuml

actor Customer

Customer -> OrderRESTController : buy(articleNumber, vin, customerId, durations)
activate OrderRESTController


OrderRESTController -> OrderService : buy(articleNumber, vin, customerId, durations)
activate OrderService



OrderService --> CustomerRepository : getCustomer(customerId)
activate CustomerRepository

CustomerRepository --> OrderService : customer
deactivate CustomerRepository

OrderService --> ProductRepository : getProducts(articleNumberList)
activate ProductRepository

ProductRepository --> OrderService : products
deactivate ProductRepository

OrderService -> OrderService : createOrder(products, durations,vin)
activate OrderService
OrderService --> OrderService :order
deactivate OrderService

OrderService -> OrderService : appendOrder(order, customer)
activate OrderService
OrderService --> OrderService
deactivate OrderService

OrderService -> CustomerRepository : persistCustomer(customer)
activate CustomerRepository
CustomerRepository --> OrderService
deactivate CustomerRepository

OrderService -> ExternalPaymentServiceRestController : processPayment(orderId, customer.paymentInfo, order.price)
activate ExternalPaymentServiceRestController

ExternalPaymentServiceRestController --> OrderService : paymentStatus
deactivate ExternalPaymentServiceRestController

OrderService --> OrderRESTController : orderId
deactivate OrderService

OrderRESTController --> Customer : orderId
deactivate OrderRESTController

@enduml



